{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\silma\\\\Documents\\\\kasa4\\\\kasa4\\\\src\\\\components\\\\Slider.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport left from \"../assets/arrowLeft.svg\";\nimport right from \"../assets/arrowRight.svg\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Slider({\n  slides\n}) {\n  _s();\n  const length = slides.length;\n  const onePicture = length <= 1;\n\n  // on définit l'index de la 1ere slide\n  const [current, setCurrent] = useState(0);\n\n  // Si : la photos est la dernière (length -1),\n  // On passe à la 1ere (0),\n  // Sinon : on passe à la prochaine (+1)\n  function nextSlide() {\n    setCurrent(current === length - 1 ? 0 : current + 1);\n  }\n  ;\n\n  // Si: la photos est la première (0),\n  // On passe à la dernière (length -1),\n  // Sinon: on passe à la précédente (-1)\n  function prevSlide() {\n    setCurrent(current === 0 ? length - 1 : current - 1);\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slider\",\n    children: [slides === null || slides === void 0 ? void 0 : slides.map((picture, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: index === current ? \"slider__active-picture\" : \"slider__inactive-picture\",\n        children: [index === current && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: picture,\n          alt: \"\",\n          className: \"slider__picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this), \"\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this);\n    }), length > 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: onePicture ? \"no-arrow\" : \"arrow arrowLeft\",\n        onClick: prevSlide,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: left,\n          alt: \"previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: onePicture ? \"no-arrow\" : \"arrow arrowRight\",\n        onClick: nextSlide,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: right,\n          alt: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"page-count\",\n        children: [current + 1, \" / \", length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(Slider, \"8+O75ArtRNvpQgzeZSk5wKohTHI=\");\n_c = Slider;\n;\nexport default Slider;\nvar _c;\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"names":["React","useState","left","right","jsxDEV","_jsxDEV","Fragment","_Fragment","Slider","slides","_s","length","onePicture","current","setCurrent","nextSlide","prevSlide","className","children","map","picture","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/silma/Documents/kasa4/kasa4/src/components/Slider.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport left from \"../assets/arrowLeft.svg\";\r\nimport right from \"../assets/arrowRight.svg\";\r\n\r\nfunction Slider({ slides }) {\r\n    const length = slides.length;\r\n    const onePicture = length <= 1;\r\n\r\n    // on définit l'index de la 1ere slide\r\n    const [current, setCurrent] = useState(0);\r\n\r\n    // Si : la photos est la dernière (length -1),\r\n    // On passe à la 1ere (0),\r\n    // Sinon : on passe à la prochaine (+1)\r\n    function nextSlide() {\r\n        setCurrent(current === length - 1 ? 0 : current + 1);\r\n    };\r\n\r\n    // Si: la photos est la première (0),\r\n    // On passe à la dernière (length -1),\r\n    // Sinon: on passe à la précédente (-1)\r\n    function prevSlide() {\r\n        setCurrent(current === 0 ? length - 1 : current - 1);\r\n    };\r\n\r\n    return (\r\n        <div className=\"slider\">\r\n            {slides?.map((picture, index) => {\r\n                return (\r\n                    <div key={index} className={index === current ? \"slider__active-picture\" : \"slider__inactive-picture\"} >\r\n                        {index === current && (\r\n                            <img src={picture} alt=\"\" className=\"slider__picture\" />\r\n                        )}{\"\"}\r\n                    </div>\r\n                );\r\n            })}\r\n            {/* Obtenir le buton s'il y a plus d'une photo */}\r\n            {length > 1 ? (\r\n                <>\r\n                    <span\r\n                        className={onePicture ? \"no-arrow\" : \"arrow arrowLeft\"}\r\n                        onClick={prevSlide}>\r\n                        <img src={left} alt=\"previous\" />\r\n                    </span>\r\n                    <span\r\n                        className={onePicture ? \"no-arrow\" : \"arrow arrowRight\"}\r\n                        onClick={nextSlide}>\r\n                        <img src={right} alt=\"next\" />\r\n                    </span>\r\n                    <span className=\"page-count\">\r\n                        {current + 1} / {length}\r\n                    </span>\r\n                </>\r\n            ) : null}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Slider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}